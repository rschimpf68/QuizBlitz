generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String     @unique
  Question Question[]
}

model Question {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  question   String
  idCategory String   @db.ObjectId
  answers    Answer[]
  category   Category @relation(fields: [idCategory], references: [id])
}

model Answer {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  answer     String
  correct    Boolean
  idQuestion String   @db.ObjectId
  question   Question @relation(fields: [idQuestion], references: [id])
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
